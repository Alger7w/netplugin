#!/bin/bash

# generates the version of file based on current git version

cd $GOPATH/src/github.com/contiv/netplugin/version

USE_RELEASE=$1

if [ -z "${USE_RELEASE}" ]
then
  file_name=version_default.go
  UseVersionStr="// +build !use_version" 
  useDefaultVersionString="False"
else
  file_name=version_release.go
  UseVersionStr="// +build use_version" 
  useDefaultVersionString="True"
fi

# GitCommitStr=`git show | grep commit | cut -f 2 -d ' ' | cut -b 1-10`
# VersionStr=`cat CURRENT_VERSION`
# BuildTimeStr=`date`

# borrow this logic from docker (https://github.com/docker/docker/blob/master/hack/make.sh)
VersionStr=$(< ./CURRENT_VERSION)
if command -v git &> /dev/null && git rev-parse &> /dev/null; then
  GitCommitStr=$(git rev-parse --short HEAD)
  if [ -n "$(git status --porcelain --untracked-files=no)" ]; then
    GitCommitStr="$GitCommitStr-unsupported"
  fi
  ! BuildTimeStr=$(date --rfc-3339 ns | sed -e 's/ /T/') &> /dev/null
  if [ -z $BuildTimeStr ]; then
    # If using bash 3.1 which doesn't support --rfc-3389, eg Windows CI
    BuildTimeStr=$(date -u)
  fi
else
  echo >&2 'error: unable to determine the git revision'
  exit 1
fi

cat > $file_name << EOF
$UseVersionStr
// NOTE: this file is auto-generated by PR commits

package version

const usedDefaultVersion = "$useDefaultVersionString"

// sample values are specified here
const (
	gitCommit  string = "$GitCommitStr"
	versionStr string = "$VersionStr"
	buildTime  string = "$BuildTimeStr"
)
EOF

exit 0
