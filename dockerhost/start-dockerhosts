#!/bin/bash

# Create a linux bridge between containers
brctl addbr br-em1
ip link set br-em1 up

num_nodes=1
if [ -z "$CONTIV_NODES" ];
then 
    num_nodes=1
else
    num_nodes=$CONTIV_NODES
fi
echo $num_nodes

if [ -z "$GOPATH" ];
then 
    echo "GOPATH needs to be set"
    exit
else
    netplugin_path=$GOPATH
fi
cluster=""
first="true"
for i in `seq 1 $num_nodes`; 
do
    hostname="netplugin-node$i"
    echo "Starting $hostname"
    docker run -d -i -t --name $hostname --privileged -v /var/lib/docker -v $netplugin_path:/netplugin sachja/ubuntu_netplugin bash -c "/netplugin/dockerhost/start-service.sh & bash"
    nsenter -t $(docker-pid $hostname) -n hostname $hostname
    ip link add $i-int type veth peer name $i-ext
    brctl addif br-em1 $i-ext
    ip link set netns $(docker-pid $hostname) dev $i-int
    nsenter -t $(docker-pid $hostname) -n ip link set dev $i-int name eth2
    nsenter -t $(docker-pid $hostname) -n ip link set eth2 up
    if [ $i -gt "1" ]; then
	cluster=$cluster",";
    fi
    docker exec $hostname service docker start
    addr=$(docker-ip $hostname)
    cluster=$cluster$hostname"=http://"$addr":2380"
    first="false"
done

echo $cluster

for i in `seq 1 $num_nodes`; 
do
    hostname="netplugin-node$i"
    echo "Starting etcd on $hostname"
    addr=$(docker-ip $hostname)
    docker exec $hostname etcd -name $hostname -data-dir /opt/etcd -listen-client-urls http://0.0.0.0:2379,http://0.0.0.0:4001 -advertise-client-urls http://$addr:2379,http://$addr:4001 -initial-advertise-peer-urls http://$addr:2380 -listen-peer-urls http://$addr:2380 -initial-cluster $cluster -initial-cluster-state new &
done

for i in `seq 1 $num_nodes`; 
do
    hostname="netplugin-node$i"
    echo "Starting netplugin on $hostname"
    docker exec $hostname /netplugin/bin/netplugin -host-label host$i &
done
